// infinexapi/worker/amelia_worker.go
package worker

import (
    "context"
    "fmt"
    "github.com/google/uuid"
    "infinexapi/amelia"
)

// RunOSStatCollectionJob fires off the OS stats workflow in Amelia.
// It now accepts an existing AmeliaClient instead of building one internally.
func RunOSStatCollectionJob(ctx context.Context, client *amelia.AmeliaClient) error {
    // Hard‑coded payload
    payload := map[string]interface{}{ 
        "author":                           "Siddhi.Bhardwaj@wellsfargo.com",
        "configuration_item":               "Ilhcev4150g310u",
        "requested_by":                     "Siddhi.Bhardwaj",
        "template_name":                    "UNIX Server Access Control - FHO Unix Maintenance Teams",
        "type":                             "prechecks2",
        "planned_start_date":               "2025-06-26T13:39:46.384Z",
        "planned_end_date":                 "2025-06-26T13:59:46.384Z",
        // ... (rest of your fields) ...
    }

    // Build the Amelia trigger request
    req := amelia.TriggerRequest{
        ReferenceID: fmt.Sprintf("os_stats_%s", uuid.NewString()),
        RequestType: "fetch_ctasks",
        Payload:     payload,
    }

    // Fire the request
    resp, err := client.Trigger(ctx, req)
    if err != nil {
        return fmt.Errorf("amelia trigger failed: %w", err)
    }

    fmt.Printf("✅ Amelia triggered: %+v\n", resp)
    return nil
}

// infinexapi/main.go (example invocation)
package main

import (
    "context"
    "log"
    "infinexapi/amelia"
    "infinexapi/worker"
    "time"
)

func main() {
    // 1) Configure Amelia client
    amCfg := amelia.AmeliaConfig{
        AuthURL:      "https://apiIDP-nonprod.wellsfargo.net/oauth/token",
        ClientID:     "HV8CM2fISAvO0egRu8ALhms3GeR8zoUi",
        ClientSecret: "xTYdc1JqmzkGme41",
        TokenTTL:     5 * time.Minute,
        EventsURL:    "https://apigw-uat.wellsfargo.net/OFA/FA/laC/amelia-automation-ingress/v1/Events",
    }
    client := amelia.NewClient(amCfg)

    // 2) Execute the hard‑coded OS stats job
    ctx := context.Background()
    if err := worker.RunOSStatCollectionJob(ctx, client); err != nil {
        log.Fatalf("❌ OS stats job failed: %v", err)
    }
    log.Println("✅ OS stats job triggered successfully")
}
